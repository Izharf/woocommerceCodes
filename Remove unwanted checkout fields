// Remove unwanted checkout fields in WooCommerce
add_filter('woocommerce_checkout_fields', 'custom_override_checkout_fields');
function custom_override_checkout_fields($fields) {
    unset($fields['billing']['billing_company']);
    unset($fields['billing']['billing_address_1']);
    unset($fields['billing']['billing_address_2']);
    unset($fields['billing']['billing_city']);
    unset($fields['billing']['billing_postcode']);
    unset($fields['billing']['billing_state']);
    unset($fields['billing']['billing_country']);
    unset($fields['billing']['billing_phone']);
    unset($fields['order']['order_comments']);
    unset($fields['account']['account_username']);
    unset($fields['account']['account_password']);
    unset($fields['account']['account_password-2']);
    return $fields;
}

// Remove billing fields if the cart contains virtual products
add_filter('woocommerce_checkout_fields', 'woo_remove_billing_checkout_fields');
function woo_remove_billing_checkout_fields($fields) {
    if (woo_cart_has_virtual_product()) {
        unset($fields['billing']['billing_company']);
        unset($fields['billing']['billing_address_1']);
        unset($fields['billing']['billing_address_2']);
        unset($fields['billing']['billing_city']);
        unset($fields['billing']['billing_postcode']);
        unset($fields['billing']['billing_state']);
        unset($fields['billing']['billing_country']);
    }
    return $fields;
}

// Check if the cart contains a virtual product
function woo_cart_has_virtual_product() {
    global $woocommerce;
    foreach ($woocommerce->cart->get_cart() as $cart_item) {
        if ($cart_item['data']->is_virtual()) {
            return true;
        }
    }
    return false;
}
